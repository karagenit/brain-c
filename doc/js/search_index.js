var search_data = {"index":{"searchIndex":["brainc","compiler","variable","compile()","exec()","interpret()","new()","new()","preprocess()"],"longSearchIndex":["brainc","brainc::compiler","brainc::variable","brainc::compiler#compile()","brainc::compiler#exec()","brainc::compiler#interpret()","brainc::compiler::new()","brainc::variable::new()","brainc::compiler#preprocess()"],"info":[["BrainC","","BrainC.html","","<p>Compilation tools for converting C to Brainfuck\n"],["BrainC::Compiler","","BrainC/Compiler.html","","<p>This class is used to compile C source to Brainfuck\n"],["BrainC::Variable","","BrainC/Variable.html","","<p>This class represents a Variable on the BF Tape\n"],["compile","BrainC::Compiler","BrainC/Compiler.html#method-i-compile","(inst)","<p>Converts instruction to BF, writes to output.\n"],["exec","BrainC::Compiler","BrainC/Compiler.html#method-i-exec","()","<p>Calls preprocess and then interpret. Returns outputted Brainfuck.\n"],["interpret","BrainC::Compiler","BrainC/Compiler.html#method-i-interpret","()","<p>Iterates over Instructions, executes Compile on each.\n"],["new","BrainC::Compiler","BrainC/Compiler.html#method-c-new","(source)",""],["new","BrainC::Variable","BrainC/Variable.html#method-c-new","(index, value = 0)",""],["preprocess","BrainC::Compiler","BrainC/Compiler.html#method-i-preprocess","()","<p>Used to convert raw source into a series of instructions. Returns a list of\nthe instructions found.\n"]]}}